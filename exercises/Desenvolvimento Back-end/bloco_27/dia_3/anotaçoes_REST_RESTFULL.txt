RESTful é, basicamente, um web service que segue as regras definidas pelo padrão REST.

Representational State Transfer (REST), em português Transferência de Estado Representacional, é um estilo de arquitetura de software, controlado pelo W3C , que define um conjunto de restrições a serem usadas para a criação de APIs.

Para o REST, uma aplicação é um conjunto de recursos que podem ter seu estado representado de alguma forma. Ao consumir esses recursos, você está transferindo as informações sobre esse estado para o cliente (uma requisição GET , por exemplo) 
ou fazendo uma alteração nele (um POST , PUT ou DELETE ). Daí o nome Transferência de Estado Representacional , ou seja, estamos transferindo uma representação do estado de algum recurso.


As 6 restrições para ser RESTful
1 - Interface uniforme ( Uniform Interface ) - Essa interface inclui o endpoint , o tipo de retorno e o uso dos verbos HTTP .
2 - Arquitetura cliente-servidor - Não importa quem é nosso cliente, as nossas APIs têm que conseguir retornar dados para ele
3 - Sem estado ( Stateless ) - Não manter estado significa que toda requisição deve conter todas as informações necessárias (ser autossuficiente) para nossa API realizar uma ação . Desse jeito, não podemos reutilizar nenhum contexto que está armazenado no servidor (uma variável, por exemplo).
4 - Cacheable - as respostas dadas pela nossa API devem dizer, explicitamente, se podem ou não ser cacheadas e por quanto tempo . Com isso, evita-se que clientes forneçam respostas "velhas" ou inapropriadas.
5 - Sistema em camadas ( Layered System ) - Esse princípio é sobre abstrair do cliente as camadas necessárias para responder a uma requisição .
6 - Código sob demanda ( Code on Demand ) - dar a possibilidade de o nosso servidor enviar código (JavaScript, por exemplo) ao nosso cliente, onde será executado. Assim, você consegue customizar o comportamento do cliente.

REST no Express

De maneira geral, usar o Express ou qualquer outro framework não deve fazer muita diferença.
vantagens de se usar o Express para construção de APIs é a organização das rotas

app.route('/user')
  .get((req, res) => {
    // Realiza uma operação
    res.status(401).send({
      message: 'Usuário não autorizado'
    })
  })
  .post(...)
  .put(...)
  .delete(...)